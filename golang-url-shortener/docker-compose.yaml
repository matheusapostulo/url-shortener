services:
  # golang-api:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: golang-api
  #   working_dir: /app
  #   depends_on:
  #     - mysql-master
  #     - mysql-replica1
  #     - mysql-replica2
  #     - redis
  # healthcheck:
    # test: ["CMD", "mysqladmin", "ping", "-h", "mysql-master"]
    # interval: 10s
    # retries: 5
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - .:/app
  #     - /go/pkg/mod:/go/pkg/mod
  #   command: sh -c "air -c air.toml"

  mysql-master:
    image: mysql:latest
    container_name: mysql-master
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: urls
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./mysql-init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql-init/master-config/my.cnf:/etc/mysql/my.cnf
    networks:
      - mysql-network
    restart: always

  mysql-replica1:
    image: mysql:latest
    container_name: mysql-replica1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: urls
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./mysql-init/replica-config/my1.cnf:/etc/mysql/my.cnf
    networks:
      - mysql-network
    depends_on:
      mysql-master:
        condition: service_healthy
    command: ["sh", "-c", "docker-entrypoint.sh mysqld"]
    restart: always

  mysql-replica2:
    image: mysql:latest
    container_name: mysql-replica2
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: urls
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./mysql-init/replica-config/my2.cnf:/etc/mysql/my.cnf
    networks:
      - mysql-network
    depends_on:
      mysql-master:
        condition: service_healthy
    command: ["sh", "-c", "docker-entrypoint.sh mysqld"]
    restart: always

  proxysql:
    image: proxysql/proxysql:latest
    container_name: proxysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_HOST=mysql-master
      - MYSQL_PORT=3306
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass
    ports:
      - "6033:6033"
      - "6032:6032"
      - "6080:6080"
    volumes:
      - ./mysql-init/proxysql-config/proxysql.cnf:/etc/proxysql.cnf
    networks:
      - mysql-network
    depends_on:
      mysql-master:
        condition: service_healthy
      mysql-replica1:
        condition: service_healthy
      mysql-replica2:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  redis-data: 
    driver: local

networks:
  mysql-network:
    driver: bridge