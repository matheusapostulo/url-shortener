// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	utils "github.com/matheusapostulo/url-shortener/utils/logger"
)

// LogPublisherService is an autogenerated mock type for the LogPublisherService type
type LogPublisherService struct {
	mock.Mock
}

// PublishLog provides a mock function with given fields: log
func (_m *LogPublisherService) PublishLog(log utils.Log) error {
	ret := _m.Called(log)

	if len(ret) == 0 {
		panic("no return value specified for PublishLog")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(utils.Log) error); ok {
		r0 = rf(log)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewLogPublisherService creates a new instance of LogPublisherService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLogPublisherService(t interface {
	mock.TestingT
	Cleanup(func())
}) *LogPublisherService {
	mock := &LogPublisherService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
